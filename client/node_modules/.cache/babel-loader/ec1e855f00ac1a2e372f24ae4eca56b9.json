{"ast":null,"code":"var _jsxFileName = \"C:\\\\MERN-Stack-Projects\\\\Blog-Website\\\\client\\\\src\\\\components\\\\home\\\\post\\\\Posts.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Grid, Box } from \"@mui/material\";\nimport { Link, useSearchParams } from \"react-router-dom\";\nimport { API } from \"../../../service/api\";\nimport Post from \"./Post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const [posts, getPosts] = useState([]);\n  const [searchParams] = useSearchParams();\n  const category = searchParams.get(\"category\");\n  useEffect(() => {\n    const fetchData = async () => {\n      let response = await API.getAllPosts({\n        category: category || \"\"\n      });\n      if (response.isSuccess) {\n        getPosts(response.data);\n      }\n    };\n    fetchData();\n  }, [category]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: (posts === null || posts === void 0 ? void 0 : posts.length) ? posts.map(post => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      lg: 3,\n      sm: 4,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        style: {\n          textDecoration: \"none\",\n          color: \"inherit\"\n        },\n        to: `details/${post._id}`,\n        children: /*#__PURE__*/_jsxDEV(Post, {\n          post: post\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(Box, {\n      style: {\n        color: \"878787\",\n        margin: \"30px 80px\",\n        fontSize: 18\n      },\n      children: \"No data is available for selected category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(Posts, \"pts1W2ILwi0At/DNGtEb2nIPAj0=\", false, function () {\n  return [useSearchParams];\n});\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["useEffect","useState","Grid","Box","Link","useSearchParams","API","Post","jsxDEV","_jsxDEV","Fragment","_Fragment","Posts","_s","posts","getPosts","searchParams","category","get","fetchData","response","getAllPosts","isSuccess","data","children","length","map","post","item","lg","sm","xs","style","textDecoration","color","to","_id","fileName","_jsxFileName","lineNumber","columnNumber","margin","fontSize","_c","$RefreshReg$"],"sources":["C:/MERN-Stack-Projects/Blog-Website/client/src/components/home/post/Posts.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nimport { Grid, Box } from \"@mui/material\";\r\nimport { Link, useSearchParams } from \"react-router-dom\";\r\n\r\nimport { API } from \"../../../service/api\";\r\n\r\nimport Post from \"./Post\";\r\n\r\nconst Posts = () => {\r\n  const [posts, getPosts] = useState([]);\r\n\r\n  const [searchParams] = useSearchParams();\r\n  const category = searchParams.get(\"category\");\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      let response = await API.getAllPosts({ category: category || \"\" });\r\n      if (response.isSuccess) {\r\n        getPosts(response.data);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [category]);\r\n\r\n  return (\r\n    <>\r\n      {posts?.length ? (\r\n        posts.map((post) => (\r\n          <Grid item lg={3} sm={4} xs={12}>\r\n            <Link\r\n              style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n              to={`details/${post._id}`}\r\n            >\r\n              <Post post={post} />\r\n            </Link>\r\n          </Grid>\r\n        ))\r\n      ) : (\r\n        <Box style={{ color: \"878787\", margin: \"30px 80px\", fontSize: 18 }}>\r\n          No data is available for selected category\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,SAASC,IAAI,EAAEC,GAAG,QAAQ,eAAe;AACzC,SAASC,IAAI,EAAEC,eAAe,QAAQ,kBAAkB;AAExD,SAASC,GAAG,QAAQ,sBAAsB;AAE1C,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAM,CAACe,YAAY,CAAC,GAAGX,eAAe,CAAC,CAAC;EACxC,MAAMY,QAAQ,GAAGD,YAAY,CAACE,GAAG,CAAC,UAAU,CAAC;EAE7ClB,SAAS,CAAC,MAAM;IACd,MAAMmB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAIC,QAAQ,GAAG,MAAMd,GAAG,CAACe,WAAW,CAAC;QAAEJ,QAAQ,EAAEA,QAAQ,IAAI;MAAG,CAAC,CAAC;MAClE,IAAIG,QAAQ,CAACE,SAAS,EAAE;QACtBP,QAAQ,CAACK,QAAQ,CAACG,IAAI,CAAC;MACzB;IACF,CAAC;IACDJ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACF,QAAQ,CAAC,CAAC;EAEd,oBACER,OAAA,CAAAE,SAAA;IAAAa,QAAA,EACG,CAAAV,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEW,MAAM,IACZX,KAAK,CAACY,GAAG,CAAEC,IAAI,iBACblB,OAAA,CAACP,IAAI;MAAC0B,IAAI;MAACC,EAAE,EAAE,CAAE;MAACC,EAAE,EAAE,CAAE;MAACC,EAAE,EAAE,EAAG;MAAAP,QAAA,eAC9Bf,OAAA,CAACL,IAAI;QACH4B,KAAK,EAAE;UAAEC,cAAc,EAAE,MAAM;UAAEC,KAAK,EAAE;QAAU,CAAE;QACpDC,EAAE,EAAG,WAAUR,IAAI,CAACS,GAAI,EAAE;QAAAZ,QAAA,eAE1Bf,OAAA,CAACF,IAAI;UAACoB,IAAI,EAAEA;QAAK;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACP,CAAC,gBAEF/B,OAAA,CAACN,GAAG;MAAC6B,KAAK,EAAE;QAAEE,KAAK,EAAE,QAAQ;QAAEO,MAAM,EAAE,WAAW;QAAEC,QAAQ,EAAE;MAAG,CAAE;MAAAlB,QAAA,EAAC;IAEpE;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EACN,gBACD,CAAC;AAEP,CAAC;AAAC3B,EAAA,CApCID,KAAK;EAAA,QAGcP,eAAe;AAAA;AAAAsC,EAAA,GAHlC/B,KAAK;AAsCX,eAAeA,KAAK;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}